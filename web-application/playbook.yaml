# This playbook requires privilege escalation to be set. Please
# refer to ansible.cfg in the current working directory for privilege_escalation
# configuration.

- name: Deploy a web application
  hosts: db_and_web_server1,db_and_web_server2
  become: yes
  become_user: root
  tasks:
    - name: Install all required dependencies
      package:
        name: "{{ item }}"
        state: present
      loop:
        - python
        - python-dev  # Use python-dev instead of python-devel on Debian-based systems

    - name: Add MySQL APT repository key
      apt_key:
        url: http://repo.mysql.com/RPM-GPG-KEY-mysql
        state: present

    - name: Add MySQL APT repository
      apt_repository:
        repo: "deb http://repo.mysql.com/apt/debian/ buster mysql-{{ mysql_version }}"
        state: present

    - name: Install MySQL database
      package:
        name: "{{ item }}"
        state: present
      loop:
        - mysql-server
        - libmysqlclient-dev  # Use libmysqlclient-dev instead of mysql-devel on Debian-based systems

    - name: Create MySQL configuration file
      copy:
        content: |
          [client]
          user=root
          password="@targ8et"
        dest: "/etc/.my.cnf"

    - name: Start MySQL Service
      systemd:
        name: mysql
        state: started
        enabled: yes

    - name: Install mysql-python package
      apt:
        name: python-mysqldb  # Use python-mysqldb instead of MySQL-python on Debian-based systems
        state: present

    - name: Install pip
      apt:
        name: python-pip
        state: present

    - name: Install required Python libraries
      pip:
        name: "{{ item }}"
        state: present
      loop:
        - flask
        - flask-mysql

    - name: Create Application Database
      mysql_db:
        name: employee_db
        state: present

    - name: Create Database user
      mysql_user:
        name: root
        password: root
        priv: '*.*:ALL'
        state: present

    - name: Copy source code
      copy:
        src: app.py
        dest: /opt/app.py

    - name: Start web server
      shell: "FLASK_APP=/opt/app.py nohup flask run --host=0.0.0.0 > /dev/null 2>&1 &"
